source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
install.packages("reticulate")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
install.packages("Seurat")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
install.packages("SeuratData")
devtools::install_github('satijalab/seurat-data')
install.packages("devtools")
devtools::install_github('satijalab/seurat-data')
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
install.packages("R.matlab")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
library(reticulate)
library(ggplot2)
# use_python("/Users/kenjilee/Library/Caches/pypoetry/virtualenvs/physmap-jFKH9DNU-py3.8/bin/python")
rm(list=ls())
source("~/Documents/GitHub/PhysMAP/helperFunctions.r")
# Calculates the individual representations and plots them nicely.
allData = readJianingData("~/Documents/GitHub/PhysMAP/seuratAnalysis/MergedData.mat");
jianing = allData$data;
temp = calcRepresentation(jianing, 'features',5,1:3)
jianing = temp$data;
pF = temp$p1
pF
devtools::install_github('satijalab/seurat-data')
temp = calcRepresentation(jianing, 'ISI',50, 1:30, "ISI")
jianing = temp$data;
pI = temp$p1
pI
temp = calcRepresentation(jianing, 'WF', 50, 1:30, "WF", FALSE)
jianing = temp$data;
pW = temp$p1
pW
temp = calcRepresentation(jianing, 'PSTH', 50, 1:30, "PSTH")
temp = calcRepresentation(jianing, 'PSTH', 50, 1:30, "PSTH")
jianing
allData
allData$data
temp = calcRepresentation(jianing, 'PSTH', 50, 1:30, "PSTH")
data <- NormalizeData(jianing)
data <- FindVariableFeatures(data)
data <- ScaleData(data)
data <- RunPCA(data,verbose = False, reduction.name=paste0(whichAssay,'pca'),npcs=30)
data <- RunPCA(data,verbose = FALSE, reduction.name=paste0(whichAssay,'pca'),npcs=30)
data <- RunPCA(data,verbose = FALSE, reduction.name=paste0(whichAssay,'pca'),npcs=50)
data <- RunPCA(data)
data <- RunPCA(data, npcs=30)
data <- FindNeighbors(data, dims = 1:30)
data <- RunUMAP(data,dims=1:30,metric='cosine')
p1 = DimPlot(data, reduction = 'umap', group.by = "layerCellType")
p1
DefaultAssay(data) = 'PSTH'
data <- FindVariableFeatures(data)
data
data <- ScaleData(data)
data <- RunPCA(data, verbose = FALSE, npcs=20)
data <- NormalizeData(data)
data <- FindVariableFeatures(data)
data
DefaultAssay(data) = 'ISI'
data
DefaultAssay(data) = 'WF'
data
DefaultAssay(data) = 'PSTH'
data
data <- FindVariableFeatures(data)
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
install.packages("aricode")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/classifyData.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/classifyData.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/classifyData.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/classifyData.r")
RunUMAP
juxtaData
doClassify
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/classifyData.r")
p1
p
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/classifyData.r")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
pInd
pP
allData
temp
jianing
pF
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/helperFunctions.r")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
source("~/Documents/GitHub/PhysMAP/jianingDataset.R")
source("~/Documents/GitHub/PhysMAP/processJianingConcat.R")
pip install leidenalg
library(leiden)
source("~/Documents/GitHub/PhysMAP/processJianingConcat.R")
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
library(leiden)
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
reticulate::py_install(packages ='leidenalg')
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
source("~/Documents/GitHub/PhysMAP_Chand/InvivoA1/processSantiago.r")
source("~/Documents/GitHub/PhysMAP_Chand/CellExplorerv2/processCellExp.r")
WFce
rawD
R.Version()
detach("package:leiden", unload = TRUE)
source("~/Documents/GitHub/PhysMAP_Chand/juxtacellular/processJianing.r")
usethis::edit_r_environ()
s
library(SeuratObject)
remove.packages("SeuratObject")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/Seurat/#:~:text=1.4M-,Seurat_4.1.0.tar.gz"
install.packages(packageurl, repos=TRUE, type="source")
Sys.which("R")
remove.packages("Matrix") remove.packages("irlba") install.packages("Matrix",type="source", dependencies=T) install.packages("irlba",type="source", dependencies=T)
remove.packages("Matrix")
remove.packages("irlba")
install.packages("Matrix",type="source", dependencies=T)
install.packages("Matrix",type="source", dependencies=T)
install.packages("Matrix",type="source", dependencies=T)
install_version("Matrix", version=1.5-1)
require(devtools)
install_version("Matrix", version=1.5-1)
install_version("Matrix", version="1.5-1")
install_version("Matrix", "1.5-1")
install_version("Matrix", "1.5-1")
source("~/Documents/GitHub/PhysMAP_Manuscript/juxtacellular/processJianing.r", echo=TRUE)
source("~/Documents/GitHub/PhysMAP_Manuscript/juxtacellular/classifyData.r", echo=TRUE)
source("~/Documents/GitHub/PhysMAP_Manuscript/juxtacellular/classifyRaw.R", echo=TRUE)
source("~/Documents/GitHub/PhysMAP_Manuscript/juxtacellular/classifyData.r", echo=TRUE)
